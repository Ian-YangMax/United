version: '3'
services:
  postgres-sql:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: examen
  #    ports:
  #      - 5433:5432
  proxy:
    image: traefik:v2.9.6
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    expose:
      - 80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  tracing:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - 14250:14250
  productos-service:
    image: jaimesalvador/app-productos:1.0.0
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-sql:5432/examen
      SERVER_PORT: 8080
      CLIENTE_URL: http://proxy/app2
      TRACING_HOST: tracing
    depends_on:
      - postgres-sql
    deploy:
      replicas: 1
    expose:
      - 8080
    labels:
      - "traefik.http.routers.productos.rule=PathPrefix(`/app1`)"
      - "traefik.http.middlewares.productos.stripprefix.prefixes=/app1"
      - "traefik.http.routers.productos.middlewares=productos"
  clientes-service:
    image: jaimesalvador/app-clientes:1.0.0
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-sql:5432/examen
      SERVER_PORT: 9090
      PRODUCTO_URL: http://proxy/app2
    depends_on:
      - postgres-sql
    deploy:
      replicas: 1
    expose:
      - 9090
    labels:
      - "traefik.http.routers.clientes.rule=PathPrefix(`/app2`)"
      - "traefik.http.middlewares.clientes.stripprefix.prefixes=/app2"
      - "traefik.http.routers.clientes.middlewares=clientes"